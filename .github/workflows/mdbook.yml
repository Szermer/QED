# Sample workflow for building and deploying a mdBook site to GitHub Pages
#
# To get started with mdBook see: https://rust-lang.github.io/mdBook/index.html
#
name: Deploy mdBook site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Link check job
  linkcheck:
    runs-on: ubuntu-latest
    env:
      MDBOOK_VERSION: 0.4.36
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-mdbook-${{ env.MDBOOK_VERSION }}
      - name: Install mdBook
        run: |
          if ! command -v mdbook &> /dev/null || ! mdbook --version | grep -q "$MDBOOK_VERSION"; then
            curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf -y | sh
            rustup update
            cargo install --version ${MDBOOK_VERSION} mdbook
            cargo install mdbook-mermaid
            cargo install mdbook-linkcheck
          fi
      - name: Check links
        run: mdbook build

  # Build job
  build:
    runs-on: ubuntu-latest
    needs: linkcheck
    env:
      MDBOOK_VERSION: 0.4.36
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-mdbook-${{ env.MDBOOK_VERSION }}
      - name: Install mdBook
        run: |
          if ! command -v mdbook &> /dev/null || ! mdbook --version | grep -q "$MDBOOK_VERSION"; then
            curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf -y | sh
            rustup update
            cargo install --version ${MDBOOK_VERSION} mdbook
            cargo install mdbook-mermaid
            cargo install mdbook-linkcheck
          fi
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with mdBook
        run: mdbook build
      - name: Fix directory structure for GitHub Pages
        run: |
          # Move html contents to root of book directory
          if [ -d "./book/html" ]; then
            mv ./book/html/* ./book/
            rm -rf ./book/html
          fi
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./book

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
